/*
매일 아침 9시에 학교에서 측정한 온도가 어떤 정수의 수열로 주어졌을 때, 연속적인 며칠 동안의 온도의 합이 가장 큰 값을 알아보고자 한다.
예를 들어, 아래와 같이 10일 간의 온도가 주어졌을 때,
3 -2 -4 -9 0 3 7 13 8 -3
모든 연속적인 이틀간의 온도의 합은 아래와 같다.
1 -6 -13 -9 3 10 20 21 5


이때, 온도의 합이 가장 큰 값은 21이다.
또 다른 예로 위와 같은 온도가 주어졌을 때, 모든 연속적인 5일 간의 온도의 합은 아래와 같으며,
-12 -12 -3 14 31 28

이때, 온도의 합이 가장 큰 값은 31이다.

매일 측정한 온도가 정수의 수열로 주어졌을 때, 연속적인 며칠 동안의 온도의 합이 가장 큰 값을 계산하는 프로그램을 작성하시오.

[입력]
첫째 줄에는 두 개의 정수 N과 K가 한 개의 공백을 사이에 두고 순서대로 주어진다.
첫 번째 정수 N은 온도를 측정한 전체 날짜의 수이다. N은 2 이상 100,000 이하이다.
두 번째 정수 K는 합을 구하기 위한 연속적인 날짜의 수이다. K는 1과 N 사이의 정수이다.
둘째 줄에는 매일 측정한 온도를 나타내는 N개의 정수가 빈칸을 사이에 두고 주어진다. 이 수들은 모두 -100 이상 100 이하이다.
[출력]
첫째 줄에는 입력되는 온도의 수열에서 연속적인 K일의 온도의 합이 최대가 되는 값을 출력한다.

[입력1]
10 2
3 -2 -4 -9 0 3 7 13 8 -3
[출력1]
21

[입력2]
10 5
3 -2 -4 -9 0 3 7 13 8 -3
[출력2]
31
 */

/*
1. 아이디어
- 투포인터를 활용
- for 문으로, 처음에 K개 값을 저장
- 다음에 인덱스 더해주고, 이전 인덱스 빼줌
- 이때마다 최대값을 갱신

2. 시간복잡도
- O(N) = 1e5 => 가능

3. 자료구조
- 각 숫자들 N개 저장배열: number[]
  - 숫자들 최대 100 => int 가능
- K 개의 값을 저장하는 변수: number
  - 최대: K * 100 = 1e5 * 100 = 1e7 => int 가능
- 최대값: number
 */
function solution (k, list) {
  let answer = 0
  let sum = 0, max = 0

  for (let i = 0; i < k; i++) {
    sum += list[i]
  }
  max = sum

  for (let i = k; i < list.length; i++) {
    sum += list[i]
    sum -= list[i - k]
    max = Math.max(max, sum)
  }

  answer = max
  console.log(answer)
}

const k1 = 2
const list1 = [3, -2, -4, -9, 0, 3, 7, 13, 8, -3]
solution(k1, list1)

const k2 = 5
const list2 = [3, -2, -4, -9, 0, 3, 7, 13, 8, -3]
solution(k2, list2)
